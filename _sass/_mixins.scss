/******************************************************************
Stylesheet: Mixins & Constants Stylesheet
******************************************************************/

* { box-sizing: border-box; }


/*
	These are the breakpoints for your website. These can be customised to your design. The
	more that I think about it, the more I'm starting to realise that these breakpoints
	need to change for the design, and not for the sizes they are. They're just a guide.
	In fact, I insist, you MUST change these.
*/

// Rems
$base:		20rem;
$mobile: 	30rem;
$phablet:	37rem;
$tablet: 	48rem;
$desklet: 55rem;
$desktop: 62rem;
$cinema: 	75rem;

$breakpoints: (
	mobile:		$mobile,
	phablet:	$phablet,
	tablet:		$tablet,
	desklet:	$desklet,
	desktop:	$desktop,
	cinema:		$cinema
);

/* This mixins file was starting to get way too big. So I've cut it down into fragments. */

@import 'mixins/clearfix',
				'mixins/blend-mode',
				'mixins/gradient',
				'mixins/placeholder',
				'mixins/screen-readers',
				'mixins/vertical-align',
				'mixins/flush-columns',
				'mixins/padding',
				'mixins/button',
				'mixins/element-counting',
				'mixins/grids',
				'mixins/inline-block',
				'mixins/content-order',
				'mixins/modular',
				'mixins/mediaqueries',
				'mixins/font-smoothing',
				'mixins/brightness',
				'mixins/encode-svgs'
;

/**
 * Grid.
 * @param  int      $i          Amount of columns needed
 * @param  int      $max:       12            Total amount of columns in grid
 * @param  gutter   $guttering: 1.875rem      Space between columns with rem value
 * @param  boolean  $last:      false         Determines final gutter
 * @return width
 *
 * @usage  @include span(6, 12);              Width with gutter
 * @usage  @include span(4, 12, 1rem);        Width with custom gutter
 * @usage  @include span(6, 12, $last:true);  Last element
 */
@mixin span( $i, $max: 12, $guttering: 1.875rem, $last: null){
  // Width without REM support
  $percentage: $i * 100% / $max;
  width: $percentage - 2%;
  // Width for modern browsers
  $percentage: $percentage - 0.01111%;
  $num: $max / $i - 1;
  $margin-right: ($num * $guttering / ($num +1));
  width: calc(#{$percentage} - #{$margin-right});
  // Grid is based on floats
  float: left;
  // If last item
  @if $last == null {
    // Gutter widthout REM support
    margin-right: 2%;
    // Gutter for modern browsers
    margin-right: calc(#{$guttering});
  }
}


